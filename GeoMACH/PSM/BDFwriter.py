from __future__ import division
import numpy


def writeBDF(filename, nodes, quads, symm):
    f = open(filename, 'w')

    def writeLine(line):
        write(line,r=80)
        write('\n')

    def write(line,l=0,r=0):
        if l is not 0:
            n = l - len(line)
            for i in range(n):
                line = ' ' + line
        if r is not 0:
            n = r - len(line)
            for i in range(n):
                line = line + ' '
        f.write(line)

    writeLine('$ Generated by ICEMCFD -  NASTRAN Interface Vers.  4.6.1')
    writeLine('$ Nastran input deck')
    writeLine('SOL 103')
    writeLine('CEND')
    writeLine('$')
    writeLine('BEGIN BULK')
    writeLine('$')
    writeLine('$       grid data              0')

    for i in range(nodes.shape[0]):
        write('GRID*   ')
        write(str(i+1),l=16)
        write('0',l=16)
        write('%.8E' % nodes[i,0],l=16)
        write('%.8E' % nodes[i,1],l=16)
        write('*')
        write(str(i+1),l=7)
        write('\n')
        write('*')
        write(str(i+1),l=7)
        write('%.8E' % nodes[i,2],l=16)
        write('0',l=16)
        write(' ',l=16)
        write('0',l=16)
        write(' ',l=8)
        write('\n')

    for i in range(quads.shape[0]):
        write('CQUAD4  ')
        write(str(i+1),l=8)
        #write(str(i+1),l=8)
        write('1',l=8)
        write(str(quads[i,0]),l=8)
        write(str(quads[i,1]),l=8)
        write(str(quads[i,2]),l=8)
        write(str(quads[i,3]),l=8)
        write(' ',l=24)
        write('\n')

    for i in range(nodes.shape[0]):
        if symm[i]:
            write('SPC     ')
            write('1',l=8)
            write(str(i+1),l=8)
            write('  123456')
            write('     0.0')
            write(' ',l=40)
            write('\n')

    writeLine('ENDDATA')

    f.close()
